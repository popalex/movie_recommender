name: FastAPI CI - build and run tests

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build_with_docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build Docker image for backend
      run: docker build -t fa backend

    - name: Build Docker image for data_ingestion
      run: docker build -t fad data_ingestion -f data_ingestion/Dockerfile.populate

  build_python:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11, 3.12, 3.13]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
    - name: Create .env file
      run: cp .env.sample .env
    # - name: Run Tests
    #   run: |
    #     pytest -v
    - name: Run tests with output to XML file
      run: pytest --junit-xml=test-results.xml

    - name: Surface failing tests
      if: always()
      uses: pmeier/pytest-results-action@main
      with:
        # A list of JUnit XML files, directories containing the former, and wildcard
        # patterns to process.
        # See @actions/glob for supported patterns.
        path: test-results.xml

        # (Optional) Add a summary of the results at the top of the report
        summary: true

        # (Optional) Select which results should be included in the report.
        # Follows the same syntax as `pytest -r`
        # display-options: fEX

        # (Optional) Fail the workflow if no JUnit XML was found.
        fail-on-empty: true

        # (Optional) Title of the test results section in the workflow summary
        title: Test results

  build_nodejs:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        node-version: ['18.x', '20.x']

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - run: cd frontend
    - name: Install packages
      run: cd frontend && npm ci
    - name: Run Build
      run: cd frontend && npm run build --if-present
    - name: Run Tests
      run: cd frontend && npm test
